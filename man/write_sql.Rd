% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_sql.R
\name{write_sql}
\alias{write_sql}
\title{write_sql}
\usage{
write_sql(
  df,
  to_schema,
  to_table,
  to_conn = connect_nfu(),
  time_stamp = FALSE,
  overwrite = TRUE,
  temporary = FALSE,
  ...
)
}
\arguments{
\item{df}{the local data.frame to write to SQL.}

\item{to_schema}{the name of the schema to write to eg "this_schema".}

\item{to_table}{the name of the table to write to eg "this_table" NB a time-stamp is added for you as a suffix if time_stamp = TRUE.}

\item{to_conn}{a remote data source, eg SQL server + database created from DBI::dbConnect. Calls connect_nfu() by default.}

\item{time_stamp}{defaults to FALSE, creating a datetime stamp suffix for your table.}

\item{overwrite}{defaults to TRUE, overwriting any existing table.}

\item{temporary}{defaults to FALSE, ensuring the table persists after the sessions ends.}

\item{...}{args to pass to copy_to.}
}
\description{
This function is called for it's side-effects of writing a local data.frame to SQL.
It is essentially a wrapper around dplyr::copy_to with some messages.
The messages log the time the table starts being written, finishes, and how long it took.
}
\examples{
\dontrun{write_sql(df, conn, "this_schema", "this_table")}
}
