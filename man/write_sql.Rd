% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_sql.R
\name{write_sql}
\alias{write_sql}
\title{write_sql}
\usage{
write_sql(
  df,
  name,
  to_conn = connect_nfu(),
  time_stamp = FALSE,
  overwrite = TRUE,
  temporary = FALSE,
  ...
)
}
\arguments{
\item{df}{data.frame to write to SQL.}

\item{name}{table to write in the format "my_schema.my_table" (if time_stamp = TRUE, suffix added, see details)}

\item{to_conn}{a remote data source, eg SQL server + database created from DBI::dbConnect. Calls connect_nfu() by default.}

\item{time_stamp}{defaults to FALSE, creating a datetime stamp suffix for your table.}

\item{overwrite}{defaults to TRUE, overwriting any existing table.}

\item{temporary}{defaults to FALSE, ensuring the table persists after the sessions ends.}

\item{...}{args to pass to dplyr::copy_to}
}
\description{
Writes a data.frame to SQL.
It is essentially a wrapper around dplyr::copy_to with some messages.
The messages log the time the table starts being written, finishes, and how long it took.
}
\details{
If timestamp TRUE, "schema.table" becomes something like
"schema.table_yyyymmdd_hhmmss"
}
\examples{
\dontrun{
df |> write_sql("this_schema", "this_table")
df |> write_sql("this_schema", "this_table", to_conn = conn)
}
}
