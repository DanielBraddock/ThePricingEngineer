% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_sql.R
\name{write_sql}
\alias{write_sql}
\title{write_sql}
\usage{
write_sql(
  df,
  name,
  conn = connect_nfu(),
  time_stamp = FALSE,
  overwrite = TRUE,
  temporary = FALSE,
  ...
)
}
\arguments{
\item{df}{data.frame to write to SQL.}

\item{name}{table to write in the format "my_schema.my_table" (if time_stamp = TRUE, suffix added, see details)}

\item{conn}{a remote data source, eg SQL server + database created from DBI::dbConnect. Calls connect_nfu() by default.}

\item{time_stamp}{defaults to FALSE, creating a datetime stamp suffix for your table.}

\item{overwrite}{defaults to TRUE, overwriting any existing table.}

\item{temporary}{defaults to FALSE, ensuring the table persists after the sessions ends.}

\item{...}{args to pass to dplyr::copy_to}
}
\description{
Writes a data.frame to SQL.
It is essentially a wrapper around dplyr::copy_to with some messages.
The messages log the time the table starts being written, finishes, and how long it took.
}
\details{
The name can include as many dots as you like.
On the work database it expects at least one dot.
In this case, everything before the first dot is taken as the schema.
And everything else is taken as the table.
Otherwise, the number of dots >= 0.
If there are zero dots, the name given is repeated as "the schema".
\emph{ie} "test1" will be saved as "test1.test1".
Though this is pretty meaningless.
It's just a little workaround.

If timestamp TRUE, "schema.table" becomes something like
"schema.table_yyyymmdd_hhmmss"
}
\examples{
\dontrun{
df |> write_sql("this_schema", "this_table")
df |> write_sql("this_schema", "this_table", conn = conn)
}
}
